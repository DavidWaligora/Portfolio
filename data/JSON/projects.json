[
  {
    "imageUrl": "partnerPortal.png",
    "alt": "PartnerPortal",
    "title": "PartnerPortal",
    "description": "Built a .NET Blazor app from scratch to automate data processing and reduce manual work for GTT Automotive. Dealers and suppliers access vehicle data through a custom login, while admins validate data via Microsoft login. The app is designed for scalability, strong security, and a smooth user experience. This project gave me hands-on experience with .NET Blazor in a professional setting.",
    "url": null,
    "technologies": [
      ".NET Blazor",
      "C#",
      "Bootstrap",
      "Entity Framework",
      "SQL",
      "API",
      "MSAL",
      "Azure DevOps",
      "CI/CD"
    ]
  },
  {
    "imageUrl": "paintballHappening.jpg",
    "alt": "paintballHappening",
    "title": "PaintballHappening",
    "description": "In a team of 4 we worked out a new website for Paintball Happening, a small KMO. The goal was to find a small kmo to help. We made a website with a reservation system, and a payment system. The website is made with wordpress and plugins. The newly made website is user friendly and easy to maintain for the owner. I created several pages and consistently met project deadlines.",
    "url": "https://paintballhappening.be/",
    "technologies": ["Wordpress", "HTML", "CSS"]
  },
  {
    "imageUrl": "cookBook.png",
    "alt": "cookBook",
    "title": "Full stack web/mobile application CookBook",
    "description": "A cross-platform recipe manager built with Next.js, Prisma, and React Native. Secure authentication using cookies (web) and Secure Storage (mobile). Efficient data fetching with TanStack Query and scalable backend via Vercel & NeonDB. Focused on performance, security, and a seamless user experience.",
    "url": "https://cookbook-black.vercel.app/",
    "technologies": [
      "NextJs",
      "Prisma",
      "React Native",
      "Android studio",
      "Vercel",
      "Tanstack query",
      "Docker",
      "Tailwind",
      "PostgreSQL"
    ]
  },
  {
    "imageUrl": "davidwaligora.com.png",
    "alt": "QRCode",
    "title": "QR Code Generator",
    "description": "I created a simple QR code generator using C# and the QRCoder NuGet package. Itâ€™s a console application that prompts the user to input a URL, then generates a QR code and saves it as a PNG file in the Downloads folder. This project was made for a friend who needed a quick QR code, and it also served as a fun opportunity to practice C# and explore QR code generation.",
    "url": null,
    "technologies": ["C#", "QR Code", "Console Application", "QRCoder"]
  },
  {
    "imageUrl": "careAway.png",
    "alt": "image of careaway website",
    "title": "Youth travel app",
    "description": "In a team of five, we developed a travel app tailored for youth, with a focus on user-friendliness and modern design. I was responsible for the backend, creating a REST API using .NET Core and Entity Framework. The app supports user account creation, login, and trip management. It also enables organizations to manage trips, monitors, activities, photos, and more. Members and non-members can easily register for trips. We used Agile methodologies (Scrum, standups, sprint planning) to ensure timely delivery and effective teamwork. This project strengthened my ability to collaborate, plan, and write efficient code in a real-world setting.",
    "url": null,
    "technologies": [
      ".NET MVC",
      "C#",
      "Entity Framework",
      "SQL",
      "API",
      "HTML",
      "CSS",
      "Bootstrap",
      "JavaScript"
    ]
  },
  {
    "imageUrl": "mauiWedstrijden.png",
    "alt": null,
    "title": "Maui match application",
    "description": "In a team of 2, We worked on a .NET Maui application, we had to add 5 features each to the application. I did debugging as there were some bugs in the application. Also i made it possible to receive, create, delete, update a match / matches from the database by creating repositories and models. I also added a extra page where i got data from a api and displayed it in a list. Here i used a deserializer to convert the json data to a model. ",
    "url": null,
    "technologies": [".NET MAUI", "C#", "XAML", "SQL", "API"]
  },
  {
    "imageUrl": "gitHub.png",
    "alt": "Github actions",
    "title": "Astro Development & Playwright Testing",
    "description": "Set up an Astro frontend with FlowBite styling, integrated scraped data using Puppeteer, and wrote E2E tests with Playwright. Deployed via GitHub Actions to Combell.",
    "url": null,
    "technologies": [
      "Astro",
      "Puppeteer",
      "Playwright",
      "FlowBite",
      "GitHub Actions",
      "CI/CD"
    ]
  },
  {
"imageUrl": "tiktaktoe.png",
    "alt": "Tic Tac Toe",
    "title": "Tic Tac Toe Custom Game",
    "description": "Developed a Tic Tac Toe game using JavaScript, HTML, andTtailwind. The game features a user-friendly interface, allowing players to choose between two-player or single-player modes. In single-player mode, the game has a custom algorithm to provide a challenging experience. The project showcases my skills in JavaScript programming, DOM manipulation, and event handling.",
    "url": "/projects/tictactoe",
    "technologies": ["JavaScript", "HTML", "CSS", "Tailwind", "DOM"]
  },
  {
    "imageUrl": "puppeteer.png",
    "alt": "Puppeteer",
    "title": "Puppeteer Web Scraping",
    "description": "Worked on several assignments focused on web scraping with Puppeteer. I Extracted product information from the Coolblue website, specifically targeting PlayStations and laptops. Collected key details such as title, price, availability, and product specifications. Applied filters to retain only relevant products, e.g., those above a certain price point. Cleaned and structured the data into organized objects and stored the results in .json files for further use. As a follow-up, I developed my own mini-project to scrape data from a weather website. This script collected 7-day forecasts to determine which days would be most suitable for specific outdoor activities.",
    "url": null,
    "technologies": ["Puppeteer", "JavaScript", "JSON"]
  },
  {
    "imageUrl": "bugfixing.png",
    "alt": "Bugfixing code",
    "title": "C# Bugfixing Project",
    "description": " I worked on a project focused on debugging an existing C# application. The assignment involved identifying and resolving 20 deliberately introduced errors, including syntax, runtime, and logical bugs. The goal was to fix as many issues as possible, with one point awarded per resolved bug. This project emphasized working with existing codebases and improving collaboration skills through pair programming. By analyzing unfamiliar code and systematically fixing issues, I gained valuable hands-on experience in maintaining real-world software.",
    "url": null,
    "technologies": ["C#", "Debugging"]
  },
  {
    "imageUrl": "drawio-tabellen.png",
    "alt": "Drawio modellen",
    "title": "Holiday Park Modeling",
    "description": "For the DB Advanced course, I completed an individual project focused on designing a database model for a hypothetical vacation park. The project involved creating an Entity-Relationship Diagram (ERD) and defining MongoDB schemas for key entities. I modeled a complex system with eight core entities including accommodations, guests, reservations, amenities, activities, and staff. Using the synthesis method, I designed a complete ERD with clear relationships, multiplicities, primary and foreign keys, data types, and other constraints. In addition to the relational model, I converted two main entities into document-based MongoDB schemas. These JSON schemas incorporated embedding and referencing to reflect the structure and interconnections between data elements, ensuring encapsulation and proper data typing.",
    "url": null,
    "technologies": ["MongoDB", "ERD", "Database Design"]
  },
  {
    "imageUrl": "javascriptTask.png",
    "alt": "Image with programmer",
    "title": "JavaScript Task Manager",
    "description": "Created a dynamic task list app using advanced JS features like DOM manipulation, AJAX, and local storage.",
    "url": null,
    "technologies": ["JavaScript", "DOM", "AJAX", "LocalStorage"]
  },
  {
    "imageUrl": "formJavascript.png",
    "alt": "Form error message code",
    "title": "User Registration Form",
    "description": "Built a dynamic form with dark mode, real-time validation, and conditional dropdowns. Used JS and Bootstrap.",
    "url": null,
    "technologies": ["JavaScript", "Bootstrap", "Form Validation"]
  },
  {
    "imageUrl": "moderniseringWebsite.png",
    "alt": "VoorbeeldWebsite",
    "title": "SportFusion Camp Modernization",
    "description": "Redesigned an old website using Bootstrap for a modern, responsive look. Maintained original content structure.",
    "url": null,
    "technologies": ["Bootstrap", "HTML", "CSS", "Responsive Design"]
  }
]
